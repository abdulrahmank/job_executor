// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abdulrahmank/job_executor/time_based/dao (interfaces: JobSettingDao)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobSettingDao is a mock of JobSettingDao interface
type MockJobSettingDao struct {
	ctrl     *gomock.Controller
	recorder *MockJobSettingDaoMockRecorder
}

// MockJobSettingDaoMockRecorder is the mock recorder for MockJobSettingDao
type MockJobSettingDaoMockRecorder struct {
	mock *MockJobSettingDao
}

// NewMockJobSettingDao creates a new mock instance
func NewMockJobSettingDao(ctrl *gomock.Controller) *MockJobSettingDao {
	mock := &MockJobSettingDao{ctrl: ctrl}
	mock.recorder = &MockJobSettingDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJobSettingDao) EXPECT() *MockJobSettingDaoMockRecorder {
	return m.recorder
}

// SaveJob mocks base method
func (m *MockJobSettingDao) SaveJob(arg0, arg1, arg2, arg3 string, arg4 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveJob", arg0, arg1, arg2, arg3, arg4)
}

// SaveJob indicates an expected call of SaveJob
func (mr *MockJobSettingDaoMockRecorder) SaveJob(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveJob", reflect.TypeOf((*MockJobSettingDao)(nil).SaveJob), arg0, arg1, arg2, arg3, arg4)
}
