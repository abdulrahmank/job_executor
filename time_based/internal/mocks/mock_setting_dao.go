// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abdulrahmank/job_executor/time_based/dao (interfaces: JobSettingDao)

// Package mocks is a generated GoMock package.
package mocks

import (
	dao "github.com/abdulrahmank/job_executor/time_based/dao"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobSettingDao is a mock of JobSettingDao interface
type MockJobSettingDao struct {
	ctrl     *gomock.Controller
	recorder *MockJobSettingDaoMockRecorder
}

// MockJobSettingDaoMockRecorder is the mock recorder for MockJobSettingDao
type MockJobSettingDaoMockRecorder struct {
	mock *MockJobSettingDao
}

// NewMockJobSettingDao creates a new mock instance
func NewMockJobSettingDao(ctrl *gomock.Controller) *MockJobSettingDao {
	mock := &MockJobSettingDao{ctrl: ctrl}
	mock.recorder = &MockJobSettingDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJobSettingDao) EXPECT() *MockJobSettingDaoMockRecorder {
	return m.recorder
}

// DecrementRemainingWeeks mocks base method
func (m *MockJobSettingDao) DecrementRemainingWeeks(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DecrementRemainingWeeks", arg0)
}

// DecrementRemainingWeeks indicates an expected call of DecrementRemainingWeeks
func (mr *MockJobSettingDaoMockRecorder) DecrementRemainingWeeks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecrementRemainingWeeks", reflect.TypeOf((*MockJobSettingDao)(nil).DecrementRemainingWeeks), arg0)
}

// DeleteJob mocks base method
func (m *MockJobSettingDao) DeleteJob(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteJob", arg0)
}

// DeleteJob indicates an expected call of DeleteJob
func (mr *MockJobSettingDaoMockRecorder) DeleteJob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteJob", reflect.TypeOf((*MockJobSettingDao)(nil).DeleteJob), arg0)
}

// GetFileName mocks base method
func (m *MockJobSettingDao) GetFileName(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileName", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileName indicates an expected call of GetFileName
func (mr *MockJobSettingDaoMockRecorder) GetFileName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileName", reflect.TypeOf((*MockJobSettingDao)(nil).GetFileName), arg0)
}

// GetJobsFor mocks base method
func (m *MockJobSettingDao) GetJobsFor(arg0 string) []dao.TimeBasedJob {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobsFor", arg0)
	ret0, _ := ret[0].([]dao.TimeBasedJob)
	return ret0
}

// GetJobsFor indicates an expected call of GetJobsFor
func (mr *MockJobSettingDaoMockRecorder) GetJobsFor(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobsFor", reflect.TypeOf((*MockJobSettingDao)(nil).GetJobsFor), arg0)
}

// SaveEventBasedJob mocks base method
func (m *MockJobSettingDao) SaveEventBasedJob(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveEventBasedJob", arg0, arg1, arg2)
}

// SaveEventBasedJob indicates an expected call of SaveEventBasedJob
func (mr *MockJobSettingDaoMockRecorder) SaveEventBasedJob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveEventBasedJob", reflect.TypeOf((*MockJobSettingDao)(nil).SaveEventBasedJob), arg0, arg1, arg2)
}

// SaveTimedJob mocks base method
func (m *MockJobSettingDao) SaveTimedJob(arg0, arg1, arg2, arg3 string, arg4 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveTimedJob", arg0, arg1, arg2, arg3, arg4)
}

// SaveTimedJob indicates an expected call of SaveTimedJob
func (mr *MockJobSettingDaoMockRecorder) SaveTimedJob(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTimedJob", reflect.TypeOf((*MockJobSettingDao)(nil).SaveTimedJob), arg0, arg1, arg2, arg3, arg4)
}

// SetJobStatus mocks base method
func (m *MockJobSettingDao) SetJobStatus(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetJobStatus", arg0, arg1)
}

// SetJobStatus indicates an expected call of SetJobStatus
func (mr *MockJobSettingDaoMockRecorder) SetJobStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetJobStatus", reflect.TypeOf((*MockJobSettingDao)(nil).SetJobStatus), arg0, arg1)
}
