// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abdulrahmank/job_executor/time_based/dao (interfaces: FileDao)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileDao is a mock of FileDao interface
type MockFileDao struct {
	ctrl     *gomock.Controller
	recorder *MockFileDaoMockRecorder
}

// MockFileDaoMockRecorder is the mock recorder for MockFileDao
type MockFileDaoMockRecorder struct {
	mock *MockFileDao
}

// NewMockFileDao creates a new mock instance
func NewMockFileDao(ctrl *gomock.Controller) *MockFileDao {
	mock := &MockFileDao{ctrl: ctrl}
	mock.recorder = &MockFileDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileDao) EXPECT() *MockFileDaoMockRecorder {
	return m.recorder
}

// SaveFile mocks base method
func (m *MockFileDao) SaveFile(arg0 string, arg1 []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveFile", arg0, arg1)
}

// SaveFile indicates an expected call of SaveFile
func (mr *MockFileDaoMockRecorder) SaveFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockFileDao)(nil).SaveFile), arg0, arg1)
}
